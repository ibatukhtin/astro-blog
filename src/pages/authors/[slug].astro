---
import '../../styles/blog-page.styles.scss';
import fetchApi from '../../lib/strapi';
import type Article from '../../interfaces/article';
import type Author from '../../interfaces/article';
import BaseLayout from '../../layouts/BaseLayout.astro';
import PostsGrid from "../../components/blog/PostsGrid.astro";

export async function getStaticPaths() {
	const authors: Author[] = await fetchApi<Author[]>({
		endpoint: 'authors?populate[fields][0]=name&populate[fields][1]=seo_text&populate[seo][populate]=*&populate[avatar][fields][0]=url',
		wrappedByKey: 'data',
	});
	return authors.map((category) => ({
		params: { slug: category.attributes.slug },
		props: category,
	}));
}
const { slug } = Astro.params;
type Props = Author;
const author = Astro.props;
const metadata = author?.attributes.seo;
const openGraph = {
	basic: {
		title: metadata?.metaTitle
			? `${ metadata.metaTitle } - Triplay.ai Best Playful AI Travel Planning`
			: `${ author.attributes.name } - Triplay.ai Best Playful AI Travel Planning`,
		type: "profile",
		image: author.attributes.avatar
			? author.attributes.avatar.data.attributes.url
			: 'https://triplay.ai/triplay-logo.svg',
		url: `https://triplay.ai/authors/${ slug }`,
		description: `Get to know ${ metadata.metaTitle } and explore their AI-driven travel articles and recommendations.`,
	}
};
const articles = await fetchApi<Article[]>({
	endpoint: `articles?populate[cover][populate]=true
	&sort[0]=createdAt:desc&pagination[page]=1
	&pagination[pageSize]=1000
	&filters[author][slug]=${author.attributes.slug}`,
	wrappedByKey: 'data',
});
---
<BaseLayout
	pageTitle={ author?.attributes.name }
	description={ metadata?.metaDescription }
	keywords={ metadata?.metaKeywords }
	openGraph={ openGraph }
>
	<div class="blog-page">
		<nav class='breadcrumbs' aria-label='Breadcrumb'>
			<ol class='ul-unstyled breadcrumbs-list' role='list'>
				<li class='breadcrumbs-item'><a href='/'>Main</a></li>
				<li class='breadcrumbs-item'>Authors</li>
				<li class='breadcrumbs-item'>{author.attributes.name}</li>
			</ol>
		</nav>
		<div class="blog-wrapper">
			<div class="posts-wrapper">
				<h1>{author.attributes.name}</h1>
				{ articles.length &&
					<PostsGrid articles={ articles } />
				}
			</div>
		</div>
	</div>
</BaseLayout>
