---
import '../styles/blog-post.styles.scss';
import fetchApi from '../lib/strapi';
import type Article from '../interfaces/article';
import ReactMarkdown from '../components/ReactMarkdown';
import BlogLayout from '../layouts/BlogLayout.astro';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const articles = await fetchApi<Article[]>({
		endpoint: 'articles?sort[0]=createdAt:desc&populate[category][fields][0]=name&populate[category][fields][1]=slug&populate[tags][fields][0]=name&populate[tags][fields][1]=slug&populate[tags][fields][2]=color&populate[cover][fields][1]=formats&populate[author][fields][0]=name&populate[author][fields][1]=slug&populate[author][fields][2]=caption&populate[author][fields][3]=caption_line_2&populate[author][fields][4]=link&populate[author][populate][avatar][fields][0]=url',
    wrappedByKey: 'data',
  });

  return articles.map((article) => ({
    params: { slug: article.attributes.slug },
    props: article,
  }));
}
type Props = Article;
const article = Astro.props;
---
<BlogLayout pageTitle={article.attributes.title}>
	<div class="blog-post">
		<div class="container">
			<div class="post-grid">
				<div class="post-content">
					<article>
						<nav class='breadcrumbs' aria-label='Breadcrumb'>
							<ol class='ul-unstyled breadcrumbs-list' role='list'>
								<li class='breadcrumbs-item'><a href='/'>Main</a></li>
								<li class='breadcrumbs-item'><a href='/blog'>Blog</a></li>
								<li class='breadcrumbs-item'>{ article.attributes.title }</li>
							</ol>
						</nav>

						<section class="blog-content">
							<div class="blog-heading">
								<h1 class='blog-post-title'>{ article.attributes.title }</h1>
								<div class="blog-heading-meta">
									{ article.attributes.cover.data &&
										<Image
											className='blog-post-image'
											src={ article.attributes.cover.data.attributes.formats.medium.url }
											width={ article.attributes.cover.data.attributes.formats.medium.width }
											height={ article.attributes.cover.data.attributes.formats.medium.height }
											alt={article.attributes.title}
											loading="preload"
											style={{ width: '100%', aspectRatio: '3/2', height: 'auto', objectFit: 'cover' }}
										/>
									}
								</div>
							</div>
							<div class="blog-body">
								<ReactMarkdown content={article.attributes.content} />
							</div>
						</section>
					</article>

					{ article.attributes.tags &&
						<div class='blog-tags'>
							<ul class='ul-unstyled blog-tags-list'>
								{ article.attributes.tags?.data.map(tag =>
									<li class='blog-tags-item'>
										<a
											href={ `/tags/${ tag.attributes.slug }` }
											style={ { borderColor: tag.attributes.color } }
										>
											<span style={ { color: tag.attributes.color } }>
												{ tag.attributes.name }
											</span>
										</a>
									</li>
								) }
							</ul>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
	<!--<main>-->
	<!--	<div class="container">-->
	<!--		{ article.attributes.cover.data &&-->
	<!--			<Image-->
	<!--				src={ article.attributes.cover.data.attributes.formats.medium.url }-->
	<!--				width={ article.attributes.cover.data.attributes.formats.medium.width }-->
	<!--				height={ article.attributes.cover.data.attributes.formats.medium.height }-->
	<!--				alt={article.attributes.title}-->
	<!--				loading="preload"-->
	<!--				style={{ width: '100%', aspectRatio: '3/2', height: 'auto', objectFit: 'cover' }}-->
	<!--			/>-->
	<!--		}-->
	<!--		<div class="content">-->
	<!--			<ReactMarkdown content={article.attributes.content} />-->
	<!--		</div>-->
	<!--	</div>-->
	<!--</main>-->
</BlogLayout>
